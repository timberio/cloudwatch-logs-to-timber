# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2

jobs:
  build:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: Install dependencies
          command: sudo pip install flake8
      - run:
          name: Lint
          command: flake8

  release:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install dependencies
          command: sudo pip install awscli aws-sam-cli

      - run:
          name: Write out version
          command: |
             sed -i -e s/VERSION/${CIRCLE_TAG//v}/ aws/sam.yml
             echo "$CIRCLE_TAG" > VERSION

      - run:
          name: Upload to S3
          command: |
            mkdir build
            zip -r build/timber-cloudwatch-logs-lambda-function-$CIRCLE_TAG.zip .
            aws s3 cp build/timber-cloudwatch-logs-lambda-function-$CIRCLE_TAG.zip s3://packages.timber.io/cloudwatch-logs-lambda-function/timber-cloudwatch-logs-lambda-function-$CIRCLE_TAG.zip
            aws s3 cp build/timber-cloudwatch-logs-lambda-function-$CIRCLE_TAG.zip s3://packages.timber.io/cloudwatch-logs-lambda-function/timber-cloudwatch-logs-lambda-function-latest.zip

      - run:
          name: Upload to AWS Serverless Repository
          command: |
            sam package --template-file aws/sam.yml --output-template-file aws/packaged.yml --s3-bucket packages.timber.io --s3-prefix cloudwatch-logs-lambda-function/timber-logging/$CIRCLE_TAG
            sam publish --template aws/packaged.yml --region us-east-1

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:  # required since `release` has tag filters AND requires `build`
            tags:
              only: /.*/
      - release:
          requires:
            - build
          filters:
             tags:
               only: /^v.*/
             branches:
               ignore: /.*/
